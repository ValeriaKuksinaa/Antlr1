//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\User\Desktop\Antlr\Antlr\Simple.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Antlr {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ISimpleListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class SimpleBaseListener : ISimpleListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>a1</c>
	/// labeled alternative in <see cref="SimpleParser.embeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterA1([NotNull] SimpleParser.A1Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>a1</c>
	/// labeled alternative in <see cref="SimpleParser.embeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitA1([NotNull] SimpleParser.A1Context context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>b1</c>
	/// labeled alternative in <see cref="SimpleParser.embeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterB1([NotNull] SimpleParser.B1Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>b1</c>
	/// labeled alternative in <see cref="SimpleParser.embeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitB1([NotNull] SimpleParser.B1Context context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>pBooleanLiteral</c>
	/// labeled alternative in <see cref="SimpleParser.variableValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPBooleanLiteral([NotNull] SimpleParser.PBooleanLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>pBooleanLiteral</c>
	/// labeled alternative in <see cref="SimpleParser.variableValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPBooleanLiteral([NotNull] SimpleParser.PBooleanLiteralContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>pIntegerLiteral</c>
	/// labeled alternative in <see cref="SimpleParser.variableValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPIntegerLiteral([NotNull] SimpleParser.PIntegerLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>pIntegerLiteral</c>
	/// labeled alternative in <see cref="SimpleParser.variableValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPIntegerLiteral([NotNull] SimpleParser.PIntegerLiteralContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>pStringLiteral</c>
	/// labeled alternative in <see cref="SimpleParser.variableValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPStringLiteral([NotNull] SimpleParser.PStringLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>pStringLiteral</c>
	/// labeled alternative in <see cref="SimpleParser.variableValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPStringLiteral([NotNull] SimpleParser.PStringLiteralContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleParser.start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStart([NotNull] SimpleParser.StartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleParser.start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStart([NotNull] SimpleParser.StartContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleParser.methodDeclarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodDeclarations([NotNull] SimpleParser.MethodDeclarationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleParser.methodDeclarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodDeclarations([NotNull] SimpleParser.MethodDeclarationsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleParser.methodDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodDeclaration([NotNull] SimpleParser.MethodDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleParser.methodDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodDeclaration([NotNull] SimpleParser.MethodDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleParser.methodHeader"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodHeader([NotNull] SimpleParser.MethodHeaderContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleParser.methodHeader"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodHeader([NotNull] SimpleParser.MethodHeaderContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleParser.methodBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodBody([NotNull] SimpleParser.MethodBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleParser.methodBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodBody([NotNull] SimpleParser.MethodBodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] SimpleParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] SimpleParser.StatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleParser.embeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmbeddedStatement([NotNull] SimpleParser.EmbeddedStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleParser.embeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmbeddedStatement([NotNull] SimpleParser.EmbeddedStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleParser.methodName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodName([NotNull] SimpleParser.MethodNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleParser.methodName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodName([NotNull] SimpleParser.MethodNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleParser.localVariableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocalVariableDeclaration([NotNull] SimpleParser.LocalVariableDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleParser.localVariableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocalVariableDeclaration([NotNull] SimpleParser.LocalVariableDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleParser.methodCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodCall([NotNull] SimpleParser.MethodCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleParser.methodCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodCall([NotNull] SimpleParser.MethodCallContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleParser.variableType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableType([NotNull] SimpleParser.VariableTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleParser.variableType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableType([NotNull] SimpleParser.VariableTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleParser.variableName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableName([NotNull] SimpleParser.VariableNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleParser.variableName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableName([NotNull] SimpleParser.VariableNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpleParser.variableValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableValue([NotNull] SimpleParser.VariableValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpleParser.variableValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableValue([NotNull] SimpleParser.VariableValueContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace Antlr
